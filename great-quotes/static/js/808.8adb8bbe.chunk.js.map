{"version":3,"file":"static/js/808.8adb8bbe.chunk.js","mappings":"mMACA,EAA2B,gC,SCc3B,MAXA,WACE,OACE,iBAAKA,UAAWC,EAAhB,WACE,6CACA,SAAC,KAAD,CAAMC,GAAG,aAAaF,UAAU,MAAhC,2BAKL,E,SCZD,EAAuB,wBCmBvB,MAhBA,SAAmBG,GACjB,OACE,gBAAIH,UAAWC,EAAf,WACE,+BACE,iCACE,uBAAIE,EAAMC,UAEZ,gCAAaD,EAAME,aAErB,SAAC,KAAD,CAAMH,GAAE,kBAAaC,EAAMG,IAAMN,UAAU,MAA3C,+BAKL,ECjBD,EAAuB,wBAAvB,EAAyD,2BCqDzD,MAtCA,SAAmBG,GACjB,IAXkBI,EAAQC,EAWpBC,GAAUC,EAAAA,EAAAA,MACVC,GAAWC,EAAAA,EAAAA,MAIXC,EAAiD,QAFnC,IAAIC,gBAAgBH,EAASI,QAEVC,IAAI,QAErCC,GAlBYV,EAkBcJ,EAAMI,OAlBZC,EAkBoBK,EAjBvCN,EAAOW,MAAK,SAACC,EAAQC,GAC1B,OAAIZ,EACKW,EAAOb,GAAKc,EAAOd,GAAK,GAAK,EAG/Ba,EAAOb,GAAKc,EAAOd,GAAK,GAAK,CACrC,KAoBD,OACE,iCACE,gBAAKN,UAAWC,EAAhB,UACE,oBAAQoB,KAAK,SAASC,QAV5B,WACEb,EAAQc,KAAK,CACXC,SAAUb,EAASa,SACnBT,OAAO,SAAD,OAAWF,EAAqB,OAAS,QAElD,EAKK,kBACQA,EAAqB,aAAe,kBAG9C,eAAIb,UAAWC,EAAf,SACGgB,EAAaQ,KAAI,SAACC,GAAD,OAChB,SAAC,EAAD,CAEEpB,GAAIoB,EAAMpB,GACVD,OAAQqB,EAAMrB,OACdD,KAAMsB,EAAMtB,MAHPsB,EAAMpB,GAFG,QAWzB,E,2BCdD,MA9BA,WACE,OAKIqB,EAAAA,EAAAA,GAAQC,EAAAA,IAAc,GAJxBC,EADF,EACEA,YACAC,EAFF,EAEEA,OACMC,EAHR,EAGEC,KACAC,EAJF,EAIEA,MAOF,OAJAC,EAAAA,EAAAA,YAAU,WACRL,GACD,GAAE,CAACA,IAEW,YAAXC,GAEA,gBAAK9B,UAAU,WAAf,UACE,SAACmC,EAAA,EAAD,MAKFF,GACK,cAAGjC,UAAU,mBAAb,SAAiCiC,IAG1B,cAAXH,IAA2BC,GAAyC,IAAxBA,EAAaK,QACrD,SAAC,EAAD,KAEF,SAAC,EAAD,CAAW7B,OAAQwB,GAC3B,C","sources":["webpack://react-complete-guide/./src/components/quotes/NoQuotesFound.module.css?2c4b","components/quotes/NoQuotesFound.js","webpack://react-complete-guide/./src/components/quotes/QuoteItem.module.css?127c","components/quotes/QuoteItem.js","webpack://react-complete-guide/./src/components/quotes/QuoteList.module.css?9d5d","components/quotes/QuoteList.js","pages/AllQuotes.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"noquotes\":\"NoQuotesFound_noquotes__EUQsM\"};","import { Link } from 'react-router-dom';\n\nimport classes from './NoQuotesFound.module.css';\n\nfunction NoQuotesFound() {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link to=\"/new-quote\" className=\"btn\">\n        Add a Quote\n      </Link>\n    </div>\n  );\n}\n\nexport default NoQuotesFound;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"QuoteItem_item__Q6KwW\"};","import { Link } from 'react-router-dom';\n\nimport classes from './QuoteItem.module.css';\n\nfunction QuoteItem(props) {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link to={`/quotes/${props.id}`} className=\"btn\">\n        View Fullscreen\n      </Link>\n    </li>\n  );\n}\n\nexport default QuoteItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"QuoteList_list__MLz6k\",\"sorting\":\"QuoteList_sorting__GDrEn\"};","import { useHistory, useLocation } from 'react-router-dom';\n\nimport QuoteItem from './QuoteItem';\n\nimport classes from './QuoteList.module.css';\n\nfunction sortQuotes(quotes, ascending) {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    }\n\n    return quoteA.id < quoteB.id ? 1 : -1;\n  });\n}\n\nfunction QuoteList(props) {\n  const history = useHistory();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAscending = queryParams.get('sort') === 'asc';\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  function changeSortingHandler() {\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${isSortingAscending ? 'desc' : 'asc'}`,\n    });\n  }\n\n  return (\n    <>\n      <div className={classes.sorting}>\n        <button type=\"button\" onClick={changeSortingHandler}>\n          Sort {isSortingAscending ? 'Descending' : 'Ascending'}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </>\n  );\n}\n\nexport default QuoteList;\n","import { useEffect } from 'react';\n\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\nimport QuoteList from '../components/quotes/QuoteList';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport useHttp from '../hooks/use-http';\nimport { getAllQuotes } from '../lib/api';\n\nfunction AllQuotes() {\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error,\n  } = useHttp(getAllQuotes, true);\n\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === 'pending') {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className=\"centered focused\">{error}</p>;\n  }\n\n  if ((status === 'completed' && !loadedQuotes) || loadedQuotes.length === 0) {\n    return <NoQuotesFound />;\n  }\n  return <QuoteList quotes={loadedQuotes} />;\n}\n\nexport default AllQuotes;\n"],"names":["className","classes","to","props","text","author","id","quotes","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","type","onClick","push","pathname","map","quote","useHttp","getAllQuotes","sendRequest","status","loadedQuotes","data","error","useEffect","LoadingSpinner","length"],"sourceRoot":""}