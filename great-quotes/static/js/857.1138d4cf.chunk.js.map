{"version":3,"file":"static/js/857.1138d4cf.chunk.js","mappings":"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","sources":["webpack://react-complete-guide/./src/components/comments/CommentItem.module.css?204f","components/comments/CommentItem.js","webpack://react-complete-guide/./src/components/comments/CommentsList.module.css?06d6","components/comments/CommentsList.js","webpack://react-complete-guide/./src/components/comments/NewCommentForm.module.css?81c1","components/comments/NewCommentForm.js","webpack://react-complete-guide/./src/components/comments/Comments.module.css?d88e","components/comments/Comments.js","webpack://react-complete-guide/./src/components/quotes/HighlightedQuote.module.css?c98c","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"CommentItem_item__+vwzS\"};","import classes from './CommentItem.module.css';\n\nfunction CommentItem(props) {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n}\n\nexport default CommentItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"comments\":\"CommentsList_comments__UVWAR\"};","import CommentItem from './CommentItem';\n\nimport classes from './CommentsList.module.css';\n\nfunction CommentsList(props) {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n}\n\nexport default CommentsList;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"NewCommentForm_form__C3cQf\",\"loading\":\"NewCommentForm_loading__aSq20\",\"control\":\"NewCommentForm_control__iR6jS\",\"actions\":\"NewCommentForm_actions__NC323\"};","import { useEffect, useRef } from 'react';\n\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\n\nimport classes from './NewCommentForm.module.css';\n\nfunction NewCommentForm(props) {\n  const commentTextRef = useRef();\n\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddComment } = props;\n\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddComment();\n    }\n  }, [status, error, onAddComment]);\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredText = commentTextRef.current.value;\n\n    sendRequest({\n      commentData: {\n        text: enteredText,\n      },\n      quoteId: props.quoteId,\n    });\n  }\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button type=\"submit\" className=\"btn\">\n          Add Comment\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default NewCommentForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"comments\":\"Comments_comments__9cxIN\"};","import { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport CommentsList from './CommentsList';\nimport NewCommentForm from './NewCommentForm';\n\nimport classes from './Comments.module.css';\n\nfunction Comments() {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n\n  const { quoteId } = params;\n\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  function startAddCommentHandler() {\n    setIsAddingComment(true);\n  }\n\n  const addCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let comments;\n\n  if (status === 'pending') {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === 'completed' && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  if (\n    status === 'completed' &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className=\"centered\">No comments were added yet!</p>;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button type=\"button\" className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm quoteId={quoteId} onAddComment={addCommentHandler} />\n      )}\n      {comments}\n    </section>\n  );\n}\n\nexport default Comments;\n","// extracted by mini-css-extract-plugin\nexport default {\"quote\":\"HighlightedQuote_quote__dE8qA\"};","import classes from './HighlightedQuote.module.css';\n\nfunction HighlightedQuote(props) {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n}\n\nexport default HighlightedQuote;\n","import { useEffect } from 'react';\nimport { Link, Route, useParams, useRouteMatch } from 'react-router-dom';\n\nimport Comments from '../components/comments/Comments';\nimport HighlightQuote from '../components/quotes/HighlightedQuote';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport useHttp from '../hooks/use-http';\nimport { getSingleQuote } from '../lib/api';\n\nfunction QuoteDetail() {\n  const match = useRouteMatch();\n  const params = useParams();\n\n  const { quoteId } = params;\n\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error,\n  } = useHttp(getSingleQuote, true);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === 'pending') {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className=\"centered\">{error}</p>;\n  }\n\n  if (!loadedQuote.text) {\n    return <p>No quote found!</p>;\n  }\n\n  return (\n    <>\n      <h1>Quote Detail Page</h1>\n      <HighlightQuote text={loadedQuote.text} author={loadedQuote.author} />\n      <Route path={match.path} exact>\n        <div className=\"centered\">\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\n            Load Comments\n          </Link>\n        </div>\n      </Route>\n      <Route path={`${match.path}/comments`}>\n        <Comments />\n      </Route>\n    </>\n  );\n}\n\nexport default QuoteDetail;\n"],"names":["props","className","classes","text","comments","map","comment","id","commentTextRef","useRef","useHttp","addComment","sendRequest","status","error","onAddComment","submitFormHandler","event","preventDefault","enteredText","current","value","commentData","quoteId","useEffect","onSubmit","LoadingSpinner","htmlFor","rows","ref","type","useState","isAddingComment","setIsAddingComment","useParams","getAllComments","loadedComments","data","addCommentHandler","useCallback","length","onClick","author","match","useRouteMatch","getSingleQuote","loadedQuote","path","exact","to","url"],"sourceRoot":""}