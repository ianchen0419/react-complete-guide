{"version":3,"file":"static/js/884.5775aa81.chunk.js","mappings":"4MACA,EAAuB,mB,SCKvB,MAJA,SAAcA,GACZ,OAAO,gBAAKC,UAAWC,EAAhB,SAA+BF,EAAMG,UAC7C,E,SCHD,EAAuB,wBAAvB,EAAyD,2BAAzD,EAA8F,2BAA9F,EAAmI,2BC0EnI,MAnEA,SAAmBH,GACjB,OAAoCI,EAAAA,EAAAA,WAAS,GAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAEMC,GAAiBC,EAAAA,EAAAA,UACjBC,GAAeD,EAAAA,EAAAA,UAyBrB,OACE,iCACE,SAAC,KAAD,CAAQE,KAAML,EAAYM,QAV9B,SAAuBC,GACrB,MAAO,kEACR,KASG,SAAC,EAAD,WACE,kBACEC,QAjBR,WACEP,GAAc,EACf,EAgBOL,UAAWC,EACXY,SA9BR,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBV,EAAeW,QAAQC,MACvCC,EAAcX,EAAaS,QAAQC,MAIzCnB,EAAMqB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,GACjD,EAkBK,UAKGpB,EAAMwB,YACL,gBAAKvB,UAAWC,EAAhB,UACE,SAACuB,EAAA,EAAD,OAIJ,iBAAKxB,UAAWC,EAAhB,WACE,kBAAOwB,QAAQ,SAAf,qBACA,kBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAKtB,QAEtC,iBAAKN,UAAWC,EAAhB,WACE,kBAAOwB,QAAQ,OAAf,mBACA,qBAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKpB,QAEpC,gBAAKR,UAAWC,EAAhB,UACE,mBACE6B,QA7BZ,WACEzB,GAAc,EACf,EA4BWqB,KAAK,SACL1B,UAAU,MAHZ,gCAYX,E,kBC/CD,MAnBA,WACE,OAAgC+B,EAAAA,EAAAA,GAAQC,EAAAA,IAAhCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OACfC,GAAUC,EAAAA,EAAAA,MAYhB,OAVAC,EAAAA,EAAAA,YAAU,WACO,cAAXH,GACFC,EAAQG,KAAK,UAEhB,GAAE,CAACJ,EAAQC,KAOV,SAAC,EAAD,CAAWZ,UAAsB,YAAXW,EAAsBd,WAL9C,SAAyBmB,GACvBN,EAAYM,EACb,GAKF,C","sources":["webpack://react-complete-guide/./src/components/UI/Card.module.css?26d0","components/UI/Card.js","webpack://react-complete-guide/./src/components/quotes/QuoteForm.module.css?b10c","components/quotes/QuoteForm.js","pages/NewQuote.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__9h8Dh\"};","import classes from './Card.module.css';\n\nfunction Card(props) {\n  return <div className={classes.card}>{props.children}</div>;\n}\n\nexport default Card;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"QuoteForm_form__ogBoi\",\"loading\":\"QuoteForm_loading__gyIuQ\",\"control\":\"QuoteForm_control__8SqBM\",\"actions\":\"QuoteForm_actions__I8AC6\"};","import { useRef, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nimport classes from './QuoteForm.module.css';\n\nfunction QuoteForm(props) {\n  const [isEntering, setIsEntering] = useState(false);\n\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  function formFocusedHandler() {\n    setIsEntering(true);\n  }\n\n  function promptHandler(_location) {\n    return 'Are you sure you want to leave? All your entered data will lost!';\n  }\n\n  function finishEnteringHandler() {\n    setIsEntering(false);\n  }\n\n  return (\n    <>\n      <Prompt when={isEntering} message={promptHandler} />\n      <Card>\n        <form\n          onFocus={formFocusedHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button\n              onClick={finishEnteringHandler}\n              type=\"submit\"\n              className=\"btn\"\n            >\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </>\n  );\n}\n\nexport default QuoteForm;\n","import { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport QuoteForm from '../components/quotes/QuoteForm';\nimport useHttp from '../hooks/use-http';\nimport { addQuote } from '../lib/api';\n\nfunction NewQuote() {\n  const { sendRequest, status } = useHttp(addQuote);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (status === 'completed') {\n      history.push('/quotes');\n    }\n  }, [status, history]);\n\n  function addQuoteHandler(quoteData) {\n    sendRequest(quoteData);\n  }\n\n  return (\n    <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler} />\n  );\n}\n\nexport default NewQuote;\n"],"names":["props","className","classes","children","useState","isEntering","setIsEntering","authorInputRef","useRef","textInputRef","when","message","_location","onFocus","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","LoadingSpinner","htmlFor","type","id","ref","rows","onClick","useHttp","addQuote","sendRequest","status","history","useHistory","useEffect","push","quoteData"],"sourceRoot":""}